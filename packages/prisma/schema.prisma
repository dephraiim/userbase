generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "darwin"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

model User {
    id           String    @id @unique
    // TODO: Fetch email from auth session so that it is available all the time.
    // https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/github.ts
    // Use this implementation as a reference.
    email        String?   @unique
    name         String?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    image        String?
    auth_session Session[]
    key          Key[]
    Post         Post[]
}

model Session {
    id             String @id @unique
    user_id        String
    active_expires BigInt
    idle_expires   BigInt
    user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
}

model Key {
    id              String  @id @unique
    hashed_password String?
    user_id         String
    user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
}
